/*
Problem:-

Given a sorted array A containing N integers both positive and negative.

You need to create another array containing the squares of all the elements in A and return it in non-decreasing order.

Try to this in O(N) time.
*/

vector<int> Solution::solve(vector<int> &A) {
    int idx = A.size()-1;
    vector<int> ans(A.size());
    int left = 0;
    int right = A.size()-1;
    while(left <= right){
        if(abs(A[left]) > abs(A[right])){
            ans[idx--] = A[left]*A[left];
            left++;
        }else{
            ans[idx--] = A[right]*A[right];
            right--;
        }        
    }
    return ans;
}
