int Solution::solve(vector<int> &A, int B, int C) {
    if(A.size()==0){return 0;}      // base case

    int temp=C,count=0,ans=0;
    while(temp){
        count++;        // count => digits in C
        temp/=10;
    }       

    if(count<B){return 0;}  // Case 1
    else if(count>B){       // Case 2
        if(A[0]==0){
            ans=(A.size()-1)*pow(A.size(),B-1);
        }   
        else{
            ans=pow(A.size(),B);
        }   
        if(B==1 && A[0]==0){ans++;}
        return ans;
    }       
    else{           // Case 3
       if(B==1){        // If B is equal to one then return all number lesser then C.
           for(int i=0;i<A.size();i++){if(A[i]<C){ans++;}}
       }    
       else{
           vector<int> temp(B);    
           // Making vector for comparing and storing digit like 123 ==> [1,2,3].
           for(int i=B-1;i>=0;i--){
               temp[i]=C%10;
               C=C/10;
           }

           count=0; 
           for(int i=0;i<A.size();i++){
                if(A[i]==0){continue;}
                if(A[i]>temp[0]){break;}
                count++;
           }    
           ans+=(count)*(pow(A.size(),B-1));
           // this ans contain some extra values--
           int flag=0,j=0;
           for(int i=0;i<A.size();i++){
               if(A[i]==temp[j]){flag=1;}
            }
           j++;
           while(flag==1 &&j<=B-1){
               flag=0;
               int countx=0;
               for(int i=0;i<A.size();i++){
                   if(A[i]>temp[j]){countx++;}
                   if(A[i]==temp[j]){flag=1;}
                }
               ans-=((countx)*(pow(A.size(),B-j-1)));
               j++;
           }
           if(j==B && flag==1){ans--;}
       }    
    }       
    return ans;
}              